server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            prelogger: true
            postLogger: true
      routes:
        - id: user-service  # Actuator 는 권한 없이 접근 가능
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service  # Login 은 권한 없이 접근 가능
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie  # POST 로 전달되는 Header 값을 매번 새로운 값처럼 처리하도록
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service  # 회원 가입도 권한 없이 접근 가능
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service  # 그 외의 작업, 회원 정보 조회 등은 권한이 있어야 동작
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie  # POST 로 전달되는 Header 값을 매번 새로운 값처럼 처리하도록
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/catalog-service/(?<segment>.*), /$\{segment}
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh, info, metrics, prometheus

#token:
#  secret: user_token  # 임의의 값 (plain text 조합)